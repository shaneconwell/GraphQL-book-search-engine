[{"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/index.js":"1","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/App.js":"2","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/pages/SavedBooks.js":"3","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/pages/SearchBooks.js":"4","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/components/Navbar.js":"5","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/components/SignupForm.js":"6","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/auth.js":"7","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/localStorage.js":"8","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/API.js":"9","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/components/LoginForm.js":"10","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/mutations.js":"11"},{"size":266,"mtime":1628349309098,"results":"12","hashOfConfig":"13"},{"size":1427,"mtime":1628440463936,"results":"14","hashOfConfig":"13"},{"size":3309,"mtime":1628451367094,"results":"15","hashOfConfig":"13"},{"size":4858,"mtime":1628450932124,"results":"16","hashOfConfig":"13"},{"size":2524,"mtime":1628349309094,"results":"17","hashOfConfig":"13"},{"size":3732,"mtime":1628441098954,"results":"18","hashOfConfig":"13"},{"size":1234,"mtime":1628349309103,"results":"19","hashOfConfig":"13"},{"size":793,"mtime":1628349309104,"results":"20","hashOfConfig":"13"},{"size":1392,"mtime":1628349309102,"results":"21","hashOfConfig":"13"},{"size":3046,"mtime":1628440206127,"results":"22","hashOfConfig":"13"},{"size":685,"mtime":1628449930800,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dmuhp0",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/index.js",[],["49","50"],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/App.js",[],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/pages/SavedBooks.js",["51"],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/pages/SearchBooks.js",["52","53","54","55"],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/components/Navbar.js",[],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/components/SignupForm.js",["56","57"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../utils/mutations';\n\n// import { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n\n  const [createUser, { error, data }] = useMutation(CREATE_USER);\n\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(userFormData);\n\n\n    try {\n      const { data } = await createUser({\n        variables: { ...userFormData },\n      });\nconsole.log(data);\n      Auth.login(data.createUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  \n    // check if form has everything (as per react-bootstrap docs)\n    // const form = event.currentTarget;\n    // if (form.checkValidity() === false) {\n    //   event.preventDefault();\n    //   event.stopPropagation();\n    // }\n\n    // try {\n    //   const response = await createUser(userFormData);\n\n    //   if (!response.ok) {\n    //     throw new Error('something went wrong!');\n    //   }\n\n    //   const { token, user } = await response.json();\n    //   console.log(user);\n    //   Auth.login(token);\n    // } catch (err) {\n    //   console.error(err);\n    //   setShowAlert(true);\n    // }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/auth.js",[],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/localStorage.js",[],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/API.js",[],"/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/components/LoginForm.js",["58","59"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\n\n// import { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = (props) => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(userFormData);\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n    // check if form has everything (as per react-bootstrap docs)\n    // const form = event.currentTarget;\n    // if (form.checkValidity() === false) {\n    //   event.preventDefault();\n    //   event.stopPropagation();\n    // }\n\n    // try {\n    //   const response = await loginUser(userFormData);\n\n    //   if (!response.ok) {\n    //     throw new Error('something went wrong!');\n    //   }\n\n    //   const { token, user } = await response.json();\n    //   console.log(user);\n    //   Auth.login(token);\n    // } catch (err) {\n    //   console.error(err);\n    //   setShowAlert(true);\n    // }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/shaneConwell/Desktop/bootcamp/homework/GraphQL-book-search-engine/client/src/utils/mutations.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":null,"fatal":true,"severity":2,"message":"64","line":24,"column":9},{"ruleId":"65","severity":1,"message":"66","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":18},{"ruleId":"65","severity":1,"message":"69","line":73,"column":24,"nodeType":"67","messageId":"68","endLine":73,"endColumn":29},{"ruleId":"65","severity":1,"message":"70","line":73,"column":31,"nodeType":"67","messageId":"68","endLine":73,"endColumn":35},{"ruleId":"71","severity":2,"message":"72","line":73,"column":41,"nodeType":"67","endLine":73,"endColumn":52},{"ruleId":"65","severity":1,"message":"69","line":14,"column":24,"nodeType":"67","messageId":"68","endLine":14,"endColumn":29},{"ruleId":"65","severity":1,"message":"70","line":14,"column":31,"nodeType":"67","messageId":"68","endLine":14,"endColumn":35},{"ruleId":"65","severity":1,"message":"69","line":16,"column":19,"nodeType":"67","messageId":"68","endLine":16,"endColumn":24},{"ruleId":"65","severity":1,"message":"70","line":16,"column":26,"nodeType":"67","messageId":"68","endLine":16,"endColumn":30},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"Parsing error: Identifier 'userData' has already been declared.\n\n\u001b[0m \u001b[90m 22 |\u001b[39m   \u001b[36mif\u001b[39m (error) \u001b[36mreturn\u001b[39m \u001b[32m`Error! ${error.message}`\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m userData \u001b[33m=\u001b[39m data\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mme\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m   useQuery(() \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m getUserData \u001b[33m=\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m       \u001b[36mtry\u001b[39m {\u001b[0m","no-unused-vars","'saveBook' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useMutation\" is called in function \"handleSaveBook\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-global-assign","no-unsafe-negation"]